<html>

<head>
    <title>Home</title>
</head>

<body>
    <h1>Midjourney Images DB</h1>
    <h2>Status</h2>
    <p id="serverUp">The server is up.</p>
    <p id="upTime"></p>
    <h2>Links</h2>
    <a href="/show">slide show</a><br />
    <a href="/images">images</a><br />
    <a href="/tools">tools</a><br />
    <a href="/status">status</a><br />
    <label>Set Run Enabled - </label>
    <label for="download">Download:</label>
    <input type="checkbox" id="download" name="download" value="false">
    <label for="dbUpdate">DB Update:</label>
    <input type="checkbox" id="dbUpdate" name="dbUpdate" value="false">
    <label for="upscale">Upscale Update:</label>
    <input type="checkbox" id="upscale" name="upscale" value="false">
    <button id="setRunEnabled" onclick="(()=>{
        let download = document.getElementById('download').checked;
        let dbUpdate = document.getElementById('dbUpdate').checked;
        let upscale = document.getElementById('upscale').checked;
        fetch('/set-run-enabled/'+download+'/'+dbUpdate+'/'+upscale);
    })()">SET</button><br />
    <button onclick="(()=>{
        fetch('/downloadRun');
    })()">Download Run</button><br />
    <button onclick="(()=>{
        fetch('/updateDB');
    })()">DB Update Run</button><br />
    <button onclick="(()=>{
        fetch('/upscaleRun');
    })()">Upscale Run</button><br /><br />
    <button onclick="(()=>{
        fetch('/saveSettings');
    })()">Save Settings</button><br />
    <button onclick="(()=>{
        fetch('/resetSelectCount');
    })()">Reset Select Count</button><br /><br />
    <label>MJ / Discord login - </label>
    <label for="username">Discord Username:</label>
    <input type="text" id="username" name="username" value="">
    <label for="password">Discord Password:</label>
    <input type="password" id="password" name="password" value="">
    <button id="login" onclick="(()=>{
        let username = document.getElementById('username').value;
        let password = document.getElementById('password').value;
        fetch('/login/'+username+'/'+password);
    })()">Login</button><br />
    <label for="mfaCode">Discord MFA code:</label>
    <input type="text" id="mfaCode" name="mfaCode" value="">
    <button id="setmfaCode" onclick="(()=>{
        let mfaCode = document.getElementById('mfaCode').value;
        fetch('/mfa/'+mfaCode);
    })()">Send MFA code</button><br />
    <div id="logger-container" class="hiddden">
        <div class="logger">
            <div id="logger-text">
            </div>
        </div>
    </div>

    <script>
        (() => {
            fetch('/status').then((res) => {
                return res.json();
            }).then((data) => {
                console.log({ data });
                document.getElementById('download').checked = data.downloadManager.runEnabled;
                document.getElementById('dbUpdate').checked = data.databaseUpdateManager.runEnabled;
                document.getElementById('upscale').checked = data.upscalerManager.runEnabled;
                document.getElementById('upTime').innerHTML = 'Up Time: ' + data.upTimeFormatted;
                setInterval(() => {
                    fetch('/status').then((res) => {
                        return res.json();
                    }).then((data) => {
                        document.getElementById('upTime').innerHTML = 'Up Time: ' + data.upTimeFormatted;
                        document.getElementById('serverUp').innerHTML = 'The server is up.';
                    }).catch((err) => {
                        document.getElementById('serverUp').innerHTML = 'The server is down.';
                        document.getElementById('upTime').innerHTML = '';
                    })
                }, 5000);
            });
        })();
        let getLogsFromServer = null;
        function loggerDelete(id) {
            fetch('/loggerDelete/' + id)
                .then(response => response.json())
                .then(data => {
                    console.log(data);
                    getLogsFromServer();
                });
        }
        let loggerText = document.getElementById('logger-text');
        getLogsFromServer = () => {
            fetch('/loggerGet/10/false') // get the 10 most recent logs, do not delete them
                .then(response => response.json())
                .then(data => {
                    // parse some data
                    console.log(data);
                    if (data.length == 0) {
                        document.getElementById('logger-container').classList.add('hidden');
                    } else {
                        document.getElementById('logger-container').classList.remove('hidden');
                        let innerHTML = '';
                        for (let i = 0; i < data.length; i++) {
                            let timeStamp = new Date(data[i].time);
                            let message = "";
                            data[i].message.forEach((mes, i) => {
                                if (i == 0) message += mes + " - ";
                                else message += JSON.stringify(mes) + " - ";
                            });
                            innerHTML += `<span style="color: #00ff00;">${timeStamp.toLocaleString()}</span> - <span style="color: #0000ff;">${message}</span> `;
                            innerHTML += `<span style="color: red; text-decoration: underline;" onclick="loggerDelete(${data[i].id});getLogsFromServer();">Delete Log Entry</span><br><br>`;
                        }
                        loggerText.innerHTML = innerHTML;
                        // loggerText.scrollTop = loggerText.scrollHeight;
                    }
                });
        }

        getLogsFromServer();
        setInterval(getLogsFromServer, 5000);
    </script>
</body>

</html>